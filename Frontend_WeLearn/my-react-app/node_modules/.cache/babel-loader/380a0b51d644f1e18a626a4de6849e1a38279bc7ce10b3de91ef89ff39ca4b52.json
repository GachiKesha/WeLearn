{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n    i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\nvar __await = this && this.__await || function (v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n};\nvar __asyncGenerator = this && this.__asyncGenerator || function (thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n    i,\n    q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n};\nimport { prettyByte } from \"./utils/prettyByte.mjs\";\nimport { ExtensionCodec } from \"./ExtensionCodec.mjs\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int.mjs\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8.mjs\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays.mjs\";\nimport { CachedKeyDecoder } from \"./CachedKeyDecoder.mjs\";\nimport { DecodeError } from \"./DecodeError.mjs\";\nvar isValidMapKeyType = function (key) {\n  var keyType = typeof key;\n  return keyType === \"string\" || keyType === \"number\";\n};\nvar HEAD_BYTE_REQUIRED = -1;\nvar EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nvar EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport var DataViewIndexOutOfBoundsError = function () {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n}();\nvar MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\nvar sharedCachedKeyDecoder = new CachedKeyDecoder();\nvar Decoder = /** @class */function () {\n  function Decoder(extensionCodec, context, maxStrLength, maxBinLength, maxArrayLength, maxMapLength, maxExtLength, keyDecoder) {\n    if (extensionCodec === void 0) {\n      extensionCodec = ExtensionCodec.defaultCodec;\n    }\n    if (context === void 0) {\n      context = undefined;\n    }\n    if (maxStrLength === void 0) {\n      maxStrLength = UINT32_MAX;\n    }\n    if (maxBinLength === void 0) {\n      maxBinLength = UINT32_MAX;\n    }\n    if (maxArrayLength === void 0) {\n      maxArrayLength = UINT32_MAX;\n    }\n    if (maxMapLength === void 0) {\n      maxMapLength = UINT32_MAX;\n    }\n    if (maxExtLength === void 0) {\n      maxExtLength = UINT32_MAX;\n    }\n    if (keyDecoder === void 0) {\n      keyDecoder = sharedCachedKeyDecoder;\n    }\n    this.extensionCodec = extensionCodec;\n    this.context = context;\n    this.maxStrLength = maxStrLength;\n    this.maxBinLength = maxBinLength;\n    this.maxArrayLength = maxArrayLength;\n    this.maxMapLength = maxMapLength;\n    this.maxExtLength = maxExtLength;\n    this.keyDecoder = keyDecoder;\n    this.totalPos = 0;\n    this.pos = 0;\n    this.view = EMPTY_VIEW;\n    this.bytes = EMPTY_BYTES;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack = [];\n  }\n  Decoder.prototype.reinitializeState = function () {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.length = 0;\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  };\n\n  Decoder.prototype.setBuffer = function (buffer) {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  };\n  Decoder.prototype.appendBuffer = function (buffer) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      var remainingData = this.bytes.subarray(this.pos);\n      var newData = ensureUint8Array(buffer);\n      // concat remainingData + newData\n      var newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  };\n  Decoder.prototype.hasRemaining = function (size) {\n    return this.view.byteLength - this.pos >= size;\n  };\n  Decoder.prototype.createExtraByteError = function (posToShow) {\n    var _a = this,\n      view = _a.view,\n      pos = _a.pos;\n    return new RangeError(\"Extra \".concat(view.byteLength - pos, \" of \").concat(view.byteLength, \" byte(s) found at buffer[\").concat(posToShow, \"]\"));\n  };\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  Decoder.prototype.decode = function (buffer) {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n    var object = this.doDecodeSync();\n    if (this.hasRemaining(1)) {\n      throw this.createExtraByteError(this.pos);\n    }\n    return object;\n  };\n  Decoder.prototype.decodeMulti = function (buffer) {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          this.reinitializeState();\n          this.setBuffer(buffer);\n          _a.label = 1;\n        case 1:\n          if (!this.hasRemaining(1)) return [3 /*break*/, 3];\n          return [4 /*yield*/, this.doDecodeSync()];\n        case 2:\n          _a.sent();\n          return [3 /*break*/, 1];\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  };\n\n  Decoder.prototype.decodeAsync = function (stream) {\n    var stream_1, stream_1_1;\n    var e_1, _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var decoded, object, buffer, e_1_1, _b, headByte, pos, totalPos;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            decoded = false;\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 6, 7, 12]);\n            stream_1 = __asyncValues(stream);\n            _c.label = 2;\n          case 2:\n            return [4 /*yield*/, stream_1.next()];\n          case 3:\n            if (!(stream_1_1 = _c.sent(), !stream_1_1.done)) return [3 /*break*/, 5];\n            buffer = stream_1_1.value;\n            if (decoded) {\n              throw this.createExtraByteError(this.totalPos);\n            }\n            this.appendBuffer(buffer);\n            try {\n              object = this.doDecodeSync();\n              decoded = true;\n            } catch (e) {\n              if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n                throw e; // rethrow\n              }\n              // fallthrough\n            }\n\n            this.totalPos += this.pos;\n            _c.label = 4;\n          case 4:\n            return [3 /*break*/, 2];\n          case 5:\n            return [3 /*break*/, 12];\n          case 6:\n            e_1_1 = _c.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3 /*break*/, 12];\n          case 7:\n            _c.trys.push([7,, 10, 11]);\n            if (!(stream_1_1 && !stream_1_1.done && (_a = stream_1.return))) return [3 /*break*/, 9];\n            return [4 /*yield*/, _a.call(stream_1)];\n          case 8:\n            _c.sent();\n            _c.label = 9;\n          case 9:\n            return [3 /*break*/, 11];\n          case 10:\n            if (e_1) throw e_1.error;\n            return [7 /*endfinally*/];\n          case 11:\n            return [7 /*endfinally*/];\n          case 12:\n            if (decoded) {\n              if (this.hasRemaining(1)) {\n                throw this.createExtraByteError(this.totalPos);\n              }\n              return [2 /*return*/, object];\n            }\n            _b = this, headByte = _b.headByte, pos = _b.pos, totalPos = _b.totalPos;\n            throw new RangeError(\"Insufficient data in parsing \".concat(prettyByte(headByte), \" at \").concat(totalPos, \" (\").concat(pos, \" in the current buffer)\"));\n        }\n      });\n    });\n  };\n  Decoder.prototype.decodeArrayStream = function (stream) {\n    return this.decodeMultiAsync(stream, true);\n  };\n  Decoder.prototype.decodeStream = function (stream) {\n    return this.decodeMultiAsync(stream, false);\n  };\n  Decoder.prototype.decodeMultiAsync = function (stream, isArray) {\n    return __asyncGenerator(this, arguments, function decodeMultiAsync_1() {\n      var isArrayHeaderRequired, arrayItemsLeft, stream_2, stream_2_1, buffer, e_2, e_3_1;\n      var e_3, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            isArrayHeaderRequired = isArray;\n            arrayItemsLeft = -1;\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 13, 14, 19]);\n            stream_2 = __asyncValues(stream);\n            _b.label = 2;\n          case 2:\n            return [4 /*yield*/, __await(stream_2.next())];\n          case 3:\n            if (!(stream_2_1 = _b.sent(), !stream_2_1.done)) return [3 /*break*/, 12];\n            buffer = stream_2_1.value;\n            if (isArray && arrayItemsLeft === 0) {\n              throw this.createExtraByteError(this.totalPos);\n            }\n            this.appendBuffer(buffer);\n            if (isArrayHeaderRequired) {\n              arrayItemsLeft = this.readArraySize();\n              isArrayHeaderRequired = false;\n              this.complete();\n            }\n            _b.label = 4;\n          case 4:\n            _b.trys.push([4, 9,, 10]);\n            _b.label = 5;\n          case 5:\n            if (!true) return [3 /*break*/, 8];\n            return [4 /*yield*/, __await(this.doDecodeSync())];\n          case 6:\n            return [4 /*yield*/, _b.sent()];\n          case 7:\n            _b.sent();\n            if (--arrayItemsLeft === 0) {\n              return [3 /*break*/, 8];\n            }\n            return [3 /*break*/, 5];\n          case 8:\n            return [3 /*break*/, 10];\n          case 9:\n            e_2 = _b.sent();\n            if (!(e_2 instanceof DataViewIndexOutOfBoundsError)) {\n              throw e_2; // rethrow\n            }\n\n            return [3 /*break*/, 10];\n          case 10:\n            this.totalPos += this.pos;\n            _b.label = 11;\n          case 11:\n            return [3 /*break*/, 2];\n          case 12:\n            return [3 /*break*/, 19];\n          case 13:\n            e_3_1 = _b.sent();\n            e_3 = {\n              error: e_3_1\n            };\n            return [3 /*break*/, 19];\n          case 14:\n            _b.trys.push([14,, 17, 18]);\n            if (!(stream_2_1 && !stream_2_1.done && (_a = stream_2.return))) return [3 /*break*/, 16];\n            return [4 /*yield*/, __await(_a.call(stream_2))];\n          case 15:\n            _b.sent();\n            _b.label = 16;\n          case 16:\n            return [3 /*break*/, 18];\n          case 17:\n            if (e_3) throw e_3.error;\n            return [7 /*endfinally*/];\n          case 18:\n            return [7 /*endfinally*/];\n          case 19:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Decoder.prototype.doDecodeSync = function () {\n    DECODE: while (true) {\n      var headByte = this.readHeadByte();\n      var object = void 0;\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          var size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          var size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          var byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        var byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        var byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        var byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        var size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        var size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        var size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        var size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        var size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        var size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        var size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        var size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        var size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        var size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(\"Unrecognized type byte: \".concat(prettyByte(headByte)));\n      }\n      this.complete();\n      var stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        var state = stack[stack.length - 1];\n        if (state.type === 0 /* State.ARRAY */) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === 1 /* State.MAP_KEY */) {\n          if (!isValidMapKeyType(object)) {\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n          }\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n          state.key = object;\n          state.type = 2 /* State.MAP_VALUE */;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n          state.map[state.key] = object;\n          state.readCount++;\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = 1 /* State.MAP_KEY */;\n            continue DECODE;\n          }\n        }\n      }\n      return object;\n    }\n  };\n  Decoder.prototype.readHeadByte = function () {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  };\n  Decoder.prototype.complete = function () {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  };\n  Decoder.prototype.readArraySize = function () {\n    var headByte = this.readHeadByte();\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default:\n        {\n          if (headByte < 0xa0) {\n            return headByte - 0x90;\n          } else {\n            throw new DecodeError(\"Unrecognized array type byte: \".concat(prettyByte(headByte)));\n          }\n        }\n    }\n  };\n  Decoder.prototype.pushMapState = function (size) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(\"Max length exceeded: map length (\".concat(size, \") > maxMapLengthLength (\").concat(this.maxMapLength, \")\"));\n    }\n    this.stack.push({\n      type: 1 /* State.MAP_KEY */,\n      size: size,\n      key: null,\n      readCount: 0,\n      map: {}\n    });\n  };\n  Decoder.prototype.pushArrayState = function (size) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(\"Max length exceeded: array length (\".concat(size, \") > maxArrayLength (\").concat(this.maxArrayLength, \")\"));\n    }\n    this.stack.push({\n      type: 0 /* State.ARRAY */,\n      size: size,\n      array: new Array(size),\n      position: 0\n    });\n  };\n  Decoder.prototype.decodeUtf8String = function (byteLength, headerOffset) {\n    var _a;\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\"Max length exceeded: UTF-8 byte length (\".concat(byteLength, \") > maxStrLength (\").concat(this.maxStrLength, \")\"));\n    }\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n    var offset = this.pos + headerOffset;\n    var object;\n    if (this.stateIsMapKey() && ((_a = this.keyDecoder) === null || _a === void 0 ? void 0 : _a.canBeCached(byteLength))) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  };\n  Decoder.prototype.stateIsMapKey = function () {\n    if (this.stack.length > 0) {\n      var state = this.stack[this.stack.length - 1];\n      return state.type === 1 /* State.MAP_KEY */;\n    }\n\n    return false;\n  };\n  Decoder.prototype.decodeBinary = function (byteLength, headOffset) {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(\"Max length exceeded: bin length (\".concat(byteLength, \") > maxBinLength (\").concat(this.maxBinLength, \")\"));\n    }\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n    var offset = this.pos + headOffset;\n    var object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  };\n  Decoder.prototype.decodeExtension = function (size, headOffset) {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(\"Max length exceeded: ext length (\".concat(size, \") > maxExtLength (\").concat(this.maxExtLength, \")\"));\n    }\n    var extType = this.view.getInt8(this.pos + headOffset);\n    var data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  };\n  Decoder.prototype.lookU8 = function () {\n    return this.view.getUint8(this.pos);\n  };\n  Decoder.prototype.lookU16 = function () {\n    return this.view.getUint16(this.pos);\n  };\n  Decoder.prototype.lookU32 = function () {\n    return this.view.getUint32(this.pos);\n  };\n  Decoder.prototype.readU8 = function () {\n    var value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  };\n  Decoder.prototype.readI8 = function () {\n    var value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  };\n  Decoder.prototype.readU16 = function () {\n    var value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  };\n  Decoder.prototype.readI16 = function () {\n    var value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  };\n  Decoder.prototype.readU32 = function () {\n    var value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  };\n  Decoder.prototype.readI32 = function () {\n    var value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  };\n  Decoder.prototype.readU64 = function () {\n    var value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  };\n  Decoder.prototype.readI64 = function () {\n    var value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  };\n  Decoder.prototype.readF32 = function () {\n    var value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  };\n  Decoder.prototype.readF64 = function () {\n    var value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  };\n  return Decoder;\n}();\nexport { Decoder };","map":{"version":3,"names":["prettyByte","ExtensionCodec","getInt64","getUint64","UINT32_MAX","utf8DecodeJs","TEXT_DECODER_THRESHOLD","utf8DecodeTD","createDataView","ensureUint8Array","CachedKeyDecoder","DecodeError","isValidMapKeyType","key","keyType","HEAD_BYTE_REQUIRED","EMPTY_VIEW","DataView","ArrayBuffer","EMPTY_BYTES","Uint8Array","buffer","DataViewIndexOutOfBoundsError","getInt8","e","constructor","Error","MORE_DATA","sharedCachedKeyDecoder","Decoder","extensionCodec","context","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","defaultCodec","undefined","totalPos","pos","view","bytes","headByte","stack","prototype","reinitializeState","length","setBuffer","appendBuffer","hasRemaining","remainingData","subarray","newData","newBuffer","set","size","byteLength","createExtraByteError","posToShow","_a","RangeError","concat","decode","object","doDecodeSync","decodeMulti","sent","decodeAsync","stream","decoded","stream_1","__asyncValues","stream_1_1","value","_b","decodeArrayStream","decodeMultiAsync","decodeStream","isArray","isArrayHeaderRequired","arrayItemsLeft","stream_2","stream_2_1","readArraySize","complete","e_2","DECODE","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","state","type","array","position","pop","map","readCount","push","Array","headerOffset","offset","stateIsMapKey","canBeCached","headOffset","extType","data","getUint8","getUint16","getUint32","getInt16","getInt32","getFloat32","getFloat64"],"sources":["C:\\Users\\Катя\\Desktop\\WeLearn\\Frontend_WeLearn\\node_modules\\@msgpack\\msgpack\\src\\Decoder.ts"],"sourcesContent":["import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\nimport { DecodeError } from \"./DecodeError\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e: any) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType = undefined> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = UINT32_MAX,\n    private readonly maxBinLength = UINT32_MAX,\n    private readonly maxArrayLength = UINT32_MAX,\n    private readonly maxMapLength = UINT32_MAX,\n    private readonly maxExtLength = UINT32_MAX,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.length = 0;\n\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | BufferSource): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | BufferSource) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n\n      // concat remainingData + newData\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  }\n\n  private hasRemaining(size: number) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  public decode(buffer: ArrayLike<number> | BufferSource): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    const object = this.doDecodeSync();\n    if (this.hasRemaining(1)) {\n      throw this.createExtraByteError(this.pos);\n    }\n    return object;\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | BufferSource): Generator<unknown, void, unknown> {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    while (this.hasRemaining(1)) {\n      yield this.doDecodeSync();\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining(1)) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(\n    stream: AsyncIterable<ArrayLike<number> | BufferSource>,\n  ): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1]!;\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n          }\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1]!;\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}