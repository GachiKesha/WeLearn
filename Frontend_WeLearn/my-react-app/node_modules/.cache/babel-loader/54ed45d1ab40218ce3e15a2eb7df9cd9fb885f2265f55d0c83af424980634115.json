{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0430\\u0442\\u044F\\\\Desktop\\\\WeLearn\\\\Frontend_WeLearn\\\\my-react-app\\\\src\\\\components\\\\pages\\\\StartCallPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport SimplePeer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageOptions = [{\n  value: 'en',\n  label: 'English'\n}, {\n  value: 'ua',\n  label: 'Ukraine'\n}\n\n// Додайте інші мови за потребою\n];\n\nconst StartCallPage = () => {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState(null);\n  const [nickname, setNickname] = useState('');\n  const [peer, setPeer] = useState(null);\n  const handleStartCall = () => {\n    if (selectedLanguage && nickname && peer === null) {\n      // Ініціалізація Peer підключення\n      const peer = new SimplePeer({\n        initiator: true,\n        trickle: false\n      });\n      peer.on('signal', data => {\n        // Отримайте сигнал і надішліть його іншому користувачу\n        console.log('Your signal data:', data);\n      });\n\n      // Обробка подій іншого користувача\n      peer.on('data', data => {\n        console.log('Received data:', data.toString('utf-8'));\n        // Обробка отриманих даних\n      });\n\n      setPeer(peer);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sartt Call Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: languageOptions,\n        value: selectedLanguage,\n        onChange: selectedOption => setSelectedLanguage(selectedOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nickname:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nickname,\n        onChange: e => setNickname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCallbtn,\n      children: \"Start Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(StartCallPage, \"AUMqH4JPx4NjcBKEEiSJksGKCDg=\");\n_c = StartCallPage;\nexport default StartCallPage;\nvar _c;\n$RefreshReg$(_c, \"StartCallPage\");","map":{"version":3,"names":["React","useState","Select","SimplePeer","jsxDEV","_jsxDEV","languageOptions","value","label","StartCallPage","_s","selectedLanguage","setSelectedLanguage","nickname","setNickname","peer","setPeer","handleStartCall","initiator","trickle","on","data","console","log","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","selectedOption","type","e","target","onClick","startCallbtn","_c","$RefreshReg$"],"sources":["C:/Users/Катя/Desktop/WeLearn/Frontend_WeLearn/my-react-app/src/components/pages/StartCallPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport SimplePeer from 'simple-peer';\r\n\r\nconst languageOptions = [\r\n  { value: 'en', label: 'English' },\r\n  { value: 'ua', label: 'Ukraine' },\r\n  \r\n  // Додайте інші мови за потребою\r\n];\r\n\r\nconst StartCallPage = () => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState(null);\r\n  const [nickname, setNickname] = useState('');\r\n  const [peer, setPeer] = useState(null);\r\n\r\n  const handleStartCall = () => {\r\n    if (selectedLanguage && nickname && peer === null) {\r\n      // Ініціалізація Peer підключення\r\n      const peer = new SimplePeer({ initiator: true, trickle: false });\r\n\r\n      peer.on('signal', (data) => {\r\n        // Отримайте сигнал і надішліть його іншому користувачу\r\n        console.log('Your signal data:', data);\r\n      });\r\n\r\n      // Обробка подій іншого користувача\r\n      peer.on('data', (data) => {\r\n        console.log('Received data:', data.toString('utf-8'));\r\n        // Обробка отриманих даних\r\n      });\r\n\r\n      setPeer(peer);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sartt Call Page</h1>\r\n      <div>\r\n        <label>Select Language:</label>\r\n        <Select\r\n          options={languageOptions}\r\n          value={selectedLanguage}\r\n          onChange={(selectedOption) => setSelectedLanguage(selectedOption)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Nickname:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n        />\r\n      </div>\r\n      <button onClick={startCallbtn}>Start Call</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartCallPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}