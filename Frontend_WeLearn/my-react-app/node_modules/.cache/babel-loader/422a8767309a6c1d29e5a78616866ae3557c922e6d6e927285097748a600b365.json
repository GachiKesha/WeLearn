{"ast":null,"code":"var _a, _b, _c;\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int.mjs\";\nvar TEXT_ENCODING_AVAILABLE = (typeof process === \"undefined\" || ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a[\"TEXT_ENCODING\"]) !== \"never\") && typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\";\nexport function utf8Count(str) {\n  var strLength = str.length;\n  var byteLength = 0;\n  var pos = 0;\n  while (pos < strLength) {\n    var value = str.charCodeAt(pos++);\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          var extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\nexport function utf8EncodeJs(str, output, outputOffset) {\n  var strLength = str.length;\n  var offset = outputOffset;\n  var pos = 0;\n  while (pos < strLength) {\n    var value = str.charCodeAt(pos++);\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = value >> 6 & 0x1f | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          var extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = value >> 12 & 0x0f | 0xe0;\n        output[offset++] = value >> 6 & 0x3f | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = value >> 18 & 0x07 | 0xf0;\n        output[offset++] = value >> 12 & 0x3f | 0x80;\n        output[offset++] = value >> 6 & 0x3f | 0x80;\n      }\n    }\n    output[offset++] = value & 0x3f | 0x80;\n  }\n}\nvar sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport var TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE ? UINT32_MAX : typeof process !== \"undefined\" && ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b[\"TEXT_ENCODING\"]) !== \"force\" ? 200 : 0;\nfunction utf8EncodeTEencode(str, output, outputOffset) {\n  output.set(sharedTextEncoder.encode(str), outputOffset);\n}\nfunction utf8EncodeTEencodeInto(str, output, outputOffset) {\n  sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\nexport var utf8EncodeTE = (sharedTextEncoder === null || sharedTextEncoder === void 0 ? void 0 : sharedTextEncoder.encodeInto) ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\nvar CHUNK_SIZE = 4096;\nexport function utf8DecodeJs(bytes, inputOffset, byteLength) {\n  var offset = inputOffset;\n  var end = offset + byteLength;\n  var units = [];\n  var result = \"\";\n  while (offset < end) {\n    var byte1 = bytes[offset++];\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      var byte2 = bytes[offset++] & 0x3f;\n      units.push((byte1 & 0x1f) << 6 | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      var byte2 = bytes[offset++] & 0x3f;\n      var byte3 = bytes[offset++] & 0x3f;\n      units.push((byte1 & 0x1f) << 12 | byte2 << 6 | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      var byte2 = bytes[offset++] & 0x3f;\n      var byte3 = bytes[offset++] & 0x3f;\n      var byte4 = bytes[offset++] & 0x3f;\n      var unit = (byte1 & 0x07) << 0x12 | byte2 << 0x0c | byte3 << 0x06 | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(unit >>> 10 & 0x3ff | 0xd800);\n        unit = 0xdc00 | unit & 0x3ff;\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode.apply(String, units);\n      units.length = 0;\n    }\n  }\n  if (units.length > 0) {\n    result += String.fromCharCode.apply(String, units);\n  }\n  return result;\n}\nvar sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport var TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE ? UINT32_MAX : typeof process !== \"undefined\" && ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c[\"TEXT_DECODER\"]) !== \"force\" ? 200 : 0;\nexport function utf8DecodeTD(bytes, inputOffset, byteLength) {\n  var stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder.decode(stringBytes);\n}","map":{"version":3,"names":["UINT32_MAX","TEXT_ENCODING_AVAILABLE","process","_a","env","TextEncoder","TextDecoder","utf8Count","str","strLength","length","byteLength","pos","value","charCodeAt","extra","utf8EncodeJs","output","outputOffset","offset","sharedTextEncoder","undefined","TEXT_ENCODER_THRESHOLD","_b","utf8EncodeTEencode","set","encode","utf8EncodeTEencodeInto","encodeInto","subarray","utf8EncodeTE","CHUNK_SIZE","utf8DecodeJs","bytes","inputOffset","end","units","result","byte1","push","byte2","byte3","byte4","unit","String","fromCharCode","apply","sharedTextDecoder","TEXT_DECODER_THRESHOLD","_c","utf8DecodeTD","stringBytes","decode"],"sources":["C:\\Users\\Катя\\Desktop\\WeLearn\\Frontend_WeLearn\\node_modules\\@msgpack\\msgpack\\src\\utils\\utf8.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int\";\n\nconst TEXT_ENCODING_AVAILABLE =\n  (typeof process === \"undefined\" || process?.env?.[\"TEXT_ENCODING\"] !== \"never\") &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_ENCODING\"] !== \"force\"\n  ? 200\n  : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_DECODER\"] !== \"force\"\n  ? 200\n  : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder!.decode(stringBytes);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}